#! /usr/bin/env python
import configparser
import csv
import os
import getpass


import psycopg2
import psycopg2.extras
import yaml

query_folder = 'queries'

config = configparser.ConfigParser()
config.read('db.config')

DB_CONFIG = {
    'USER': config['DEFAULT']['DATABASE_USER'],
    'HOST': config['DEFAULT']['DATABASE_HOST'],
    'NAME': config['DEFAULT']['DATABASE_NAME'],
    'PORT': config['DEFAULT']['DATABASE_PORT'],
}
assert 'PASSWORD' not in DB_CONFIG, 'WHOAH, NOT COOL. DO NOT STORE YOUR PASSWORD IN THIS SCRIPT!!!!'

def get_remote_connection(config):
    safe_config = config.copy()
    try:
        print('Trying to connect to {HOST}:{PORT}/{NAME} as {USER}'.format(**safe_config))
        safe_config['PASSWORD'] = getpass.getpass()
        return psycopg2.connect("dbname='{NAME}' user='{USER}' host='{HOST}' port='{PORT}' password='{PASSWORD}'".format(**safe_config))
    except KeyboardInterrupt:
        pass

def get_group_name():
    print('Groups: ')
    groups = os.listdir(query_folder)
    print('\t'.join(groups))
    print()

    group = input('Which group? ')
    assert group in groups
    return group

def get_query_name(group):
    group_folderpath = os.path.join(query_folder, group)

    print('Queries: ')
    queries = os.listdir(group_folderpath)
    print('\t'.join(queries))
    print()


    query = input('Which query? ')
    assert query in queries
    return query

def load_query(filepath):
    with open(filepath, 'r') as file:
        return yaml.load(file.read())

def get_query():
    group_name = get_group_name()
    query_name = get_query_name(group_name)
    query_data = load_query(os.path.join(query_folder, group_name, query_name))
    params = {}
    for param_details in query_data.get('query_params', []):
        print(param_details['description'])

        name = param_details['name']
        params[name] = input('Value for `{}` >'.format(name))

    return query_data['query'].format(**params)


def execute_query(connection, query):
      cursor = connection.cursor(cursor_factory=psycopg2.extras.DictCursor)
      print('Executing query..........', end='')
      cursor.execute(query)
      print('COMPLETE')
      return cursor

if __name__ == '__main__':
    query = get_query()

    connection = get_remote_connection(DB_CONFIG)
    if connection:
        row_count = 0
        cursor = execute_query(connection, query)
        with open('query_output.csv', 'w') as csvfile:
            initial_result = cursor.fetchone()
            if initial_result:
              row_count += 1
              writer = csv.DictWriter(
                      csvfile,
                      fieldnames=dict(initial_result).keys()
              )
              writer.writeheader()
              writer.writerow(initial_result)

              while True:
                  row = cursor.fetchone()
                  if row is None: break

                  writer.writerow(row)
                  row_count += 1

            print('Wrote csv with {} records'.format(row_count))
